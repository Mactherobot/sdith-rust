#[cfg(test)]
mod tests {
    use crate::{
        keygen::{keygen, PublicKey, SecretKey},
        spec_tests::SPEC_MASTER_SEED,
    };

    #[test]
    fn test_pk_compare_to_spec() {
        let spec_pk = [
            6u8, 168, 14, 105, 170, 134, 79, 217, 168, 237, 36, 80, 142, 124, 210, 149, 94, 199,
            184, 194, 151, 197, 189, 96, 35, 216, 242, 229, 32, 70, 37, 206, 221, 89, 225, 106,
            198, 103, 215, 143, 82, 37, 155, 22, 54, 229, 214, 230, 15, 233, 227, 235, 33, 16, 215,
            198, 7, 3, 84, 235, 27, 233, 160, 125, 110, 95, 94, 241, 244, 164, 24, 169, 46, 129, 1,
            107, 218, 123, 145, 58, 92, 7, 217, 37, 18, 209, 241, 12, 114, 238, 16, 75, 54, 209,
            169, 146, 113, 207, 2, 214, 67, 194, 100, 82, 237, 91, 124, 97, 18, 168, 157, 182, 146,
            99, 19, 187, 117, 91, 49, 220, 126, 85, 168, 254, 228, 135, 5, 67, 1, 137, 211, 237,
        ];

        let (pk, ..) = keygen(SPEC_MASTER_SEED);

        let spec_pk = PublicKey::parse(&spec_pk);

        assert_eq!(pk.seed_h, spec_pk.seed_h, "seed_h mismatch");
        assert_eq!(pk.y, spec_pk.y, "y mismatch");
    }

    #[test]
    fn test_sk_compare_to_spec() {
        let spec_sk = [
            6u8, 168, 14, 105, 170, 134, 79, 217, 168, 237, 36, 80, 142, 124, 210, 149, 94, 199, 184,
            194, 151, 197, 189, 96, 35, 216, 242, 229, 32, 70, 37, 206, 221, 89, 225, 106, 198,
            103, 215, 143, 82, 37, 155, 22, 54, 229, 214, 230, 15, 233, 227, 235, 33, 16, 215, 198,
            7, 3, 84, 235, 27, 233, 160, 125, 110, 95, 94, 241, 244, 164, 24, 169, 46, 129, 1, 107,
            218, 123, 145, 58, 92, 7, 217, 37, 18, 209, 241, 12, 114, 238, 16, 75, 54, 209, 169,
            146, 113, 207, 2, 214, 67, 194, 100, 82, 237, 91, 124, 97, 18, 168, 157, 182, 146, 99,
            19, 187, 117, 91, 49, 220, 126, 85, 168, 254, 228, 135, 5, 67, 1, 137, 211, 237, 91,
            53, 217, 202, 126, 3, 149, 65, 146, 123, 138, 232, 106, 201, 191, 25, 243, 241, 209,
            152, 211, 231, 185, 90, 175, 251, 122, 42, 110, 56, 1, 75, 56, 224, 253, 138, 252, 154,
            185, 33, 209, 25, 9, 53, 19, 122, 136, 239, 182, 204, 98, 77, 116, 61, 52, 30, 133,
            230, 25, 180, 121, 180, 19, 118, 175, 159, 14, 246, 149, 4, 163, 34, 192, 143, 73, 80,
            85, 169, 241, 40, 77, 238, 197, 237, 225, 137, 134, 44, 24, 48, 117, 201, 148, 153,
            159, 127, 126, 139, 225, 97, 10, 228, 123, 196, 96, 240, 49, 157, 83, 218, 30, 110,
            114, 135, 244, 49, 0, 43, 252, 110, 34, 146, 111, 32, 65, 151, 0, 187, 197, 184, 32,
            206, 57, 42, 32, 37, 59, 37, 73, 179, 15, 43, 105, 228, 191, 78, 179, 154, 225, 14,
            158, 50, 71, 43, 47, 156, 136, 214, 59, 39, 254, 59, 62, 147, 238, 67, 218, 170, 177,
            117, 118, 179, 210, 138, 90, 43, 188, 214, 50, 195, 144, 97, 17, 178, 126, 80, 168,
            193, 121, 5, 87, 252, 64, 107, 200, 109, 83, 36, 182, 206, 220, 57, 89, 121, 127, 54,
            48, 244, 250, 205, 68, 142, 129, 21, 59, 220, 229, 93, 93, 142, 156, 72, 108, 14, 154,
            237, 244, 236, 231, 193, 241, 205, 36, 255, 58, 89, 151, 250, 221, 247, 221, 202, 116,
            100, 158, 88, 50, 56, 19, 5, 185, 223, 43, 121, 192, 58, 160, 180, 225, 193, 206, 177,
            63, 10, 127, 105, 87, 135, 210, 71, 200, 103, 141, 201, 111, 251, 66, 26, 52, 232, 34,
            246, 250, 206, 33, 82, 14, 32, 228, 204, 11, 176, 204, 203, 93, 242, 65, 74, 104, 241,
        ];

        let (_pk, sk) = keygen(SPEC_MASTER_SEED);

        let spec_sk = SecretKey::parse(&spec_sk);

        assert_eq!(sk.seed_h, spec_sk.seed_h, "seed_h mismatch");
        assert_eq!(sk.y, spec_sk.y, "y mismatch");
        assert_eq!(sk.solution.p_poly, spec_sk.solution.p_poly, "p_poly mismatch");
        assert_eq!(sk.solution.q_poly, spec_sk.solution.q_poly, "q_poly mismatch");
        assert_eq!(sk.solution.s_a, spec_sk.solution.s_a, "s_a mismatch");
    }
}
